version: "3"
services:
  configSrv:
    image: mongo:latest
    container_name: configSrv
    restart: always
    ports:
      - "27017:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.10
    volumes:
      - config-data:/data/db
    command: [
        "mongod", "--configsvr", "--replSet", "config_server", "--bind_ip_all", "--port", "27017",
      ]
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  mongos_router:
    image: mongo:latest
    depends_on:
      - configSrv
    container_name: mongos_router
    restart: always
    ports:
      - "27020:27020"
    networks:
      app-network:
        ipv4_address: 173.17.0.7
    command: [
        "mongos", "--configdb", "config_server/173.17.0.10:27017", "--bind_ip_all", "--port", "27020",
      ]
    healthcheck:
      test: ["CMD", "mongosh", "--port", "27020", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  mongodb_shard1:
    container_name: mongodb_shard1
    image: dh-mirror.gitverse.ru/mongo:latest
    depends_on:
      - configSrv
    restart: always
    ports:
      - "27018:27018"
    networks:
      app-network:
        ipv4_address: 173.17.0.8
    volumes:
      - mongodb_shard1_data:/data/db
    command:
      ["mongod", "--shardsvr", "--replSet", "shard1", "--bind_ip_all", "--port", "27018"]
    healthcheck:
      test: ["CMD", "mongosh", "--port", "27018", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  mongodb_shard2:
    container_name: mongodb_shard2
    image: dh-mirror.gitverse.ru/mongo:latest
    depends_on:
      - configSrv
    restart: always
    ports:
      - "27019:27019"
    networks:
      app-network:
        ipv4_address: 173.17.0.9
    volumes:
      - mongodb_shard2_data:/data/db
    command:
      ["mongod", "--shardsvr", "--replSet", "shard2", "--bind_ip_all", "--port", "27019"]
    healthcheck:
      test: ["CMD", "mongosh", "--port", "27019", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  pymongo_api:
    container_name: pymongo_api
    build:
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongos_router
    ports:
      - 8080:8080
    networks:
      app-network:
    environment:
      MONGODB_URL: "mongodb://mongos_router:27020"
      MONGODB_DATABASE_NAME: "somedb"

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16

volumes:
  config-data:
  mongodb_shard1_data:
  mongodb_shard2_data:
